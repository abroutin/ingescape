<class name = "igsagent" state = "stable">
    <!--
    Copyright (c) the Contributors as noted in the AUTHORS file.
    This file is part of Ingescape, <tagline d'ingescape>:
    <url de la page de lib sur le site>.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.
    -->
    ingescape agent framework

    <constructor>
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "activate immediately" type = "boolean" />
    </constructor>

    <destructor>
        DOC_STRING
    </destructor>

    <method name = "activate">
        DOC_STRING
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "deactivate">
        DOC_STRING
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "is activated">
        DOC_STRING
        <return type = "boolean" />
    </method>

    <callback_type name = "fn">
        DOC_STRING
        <argument name = "agent" type = "igsagent" />
        <argument name = "is activated" type = "boolean" />
        <argument name = "my data" type = "anything" />
    </callback_type>

    <method name = "observe">
        DOC_STRING
        <argument name = "cb" type = "igsagent fn" callback = "1"/>
        <argument name = "my data" type = "anything" />
    </method>

    <method name = "log" singleton = "1">
        DOC_STRING
        <argument name = "level" type = "igs log level t" callback = "1" />
        <argument name = "function" type = "string" />
        <argument name = "agent" type = "igsagent" />
        <argument name = "format" type = "string" variadic = "1" />
    </method>

    <method name = "name">
        DOC_STRING
        <return type = "string" fresh = "1" />
    </method>

    <method name = "set name">
        DOC_STRING
        <argument name = "name" type = "string" />
    </method>

    <method name = "family">
        DOC_STRING
        <return type = "string" fresh = "1" />
    </method>

    <method name = "set family">
        DOC_STRING
        <argument name = "family" type = "string" />
    </method>

    <method name = "uuid">
        DOC_STRING
        <return type = "string" fresh = "1" />
    </method>

    <method name = "state">
        DOC_STRING
        <return type = "string" fresh = "1" />
    </method>

    <method name = "set state">
        DOC_STRING
        <argument name = "state" type = "string" />
    </method>

    <!-- mute -->
    <method name = "mute">
        DOC_STRING
    </method>

    <method name = "unmute">
        DOC_STRING
    </method>

    <method name = "is muted">
        DOC_STRING
        <return type = "boolean" />
    </method>

    <callback_type name = "mute fn">
        DOC_STRING
        <argument name = "agent" type = "igsagent" />
        <argument name = "mute" type = "boolean" />
        <argument name = "data" type = "anything" />
    </callback_type>

    <method name = "observe mute">
        DOC_STRING
        <argument name = "cb" type = "igsagent mute fn" callback = "1" />
        <argument name = "data" type = "anything" />
    </method>

    <callback_type name = "agent events fn">
        DOC_STRING
        <argument name = "agent" type = "igsagent" />
        <argument name = "event" type = "igs agent event t" callback = "1"/>
        <argument name = "uuid" type = "string" />
        <argument name = "name" type = "string" />
        <argument name = "event data" type = "anything" />
        <argument name = "data" type = "anything" />
    </callback_type>

    <method name = "observe agent events">
        DOC_STRING
        <argument name = "cb" type = "igsagent agent events fn" callback = "1" />
        <argument name = "data" type = "anything" />
    </method>

    <method name = "definition load str">
        DOC_STRING
        <argument name = "json str" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "definition load file">
        DOC_STRING
        <argument name = "file_path" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "clear definition">
        DOC_STRING
    </method>

    <method name = "definition json">
        DOC_STRING
        <return type = "string" fresh = "1" />
    </method>

    <method name = "definition description">
        DOC_STRING
        <return type = "string" fresh = "1" />
    </method>

    <method name = "definition version">
        DOC_STRING
        <return type = "string" fresh = "1" />
    </method>

    <method name = "definition set description">
        DOC_STRING
        <argument name = "descritpion" type = "string" />
    </method>

    <method name = "definition set version">
        DOC_STRING
        <argument name = "version" type = "string" />
    </method>

    <method name = "input create">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value type" type = "igs io value type t" callback = "1" /> <!-- callback hack to avoid argument being a pointer -->
        <argument name = "value" type = "anything" />
        <argument name = "size" type = "size" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "output create">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value type" type = "igs io value type t" callback = "1" /> <!-- callback hack to avoid argument being a pointer -->
        <argument name = "value" type = "anything" />
        <argument name = "size" type = "size" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "attribute create">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value type" type = "igs io value type t" callback = "1" /> <!-- callback hack to avoid argument being a pointer -->
        <argument name = "value" type = "anything" />
        <argument name = "size" type = "size" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "input remove">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "output remove">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "attribute remove">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "input type">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "igs io value type t" callback = "1" /> <!-- callback hack to avoid argument being a pointer -->
    </method>

    <method name = "output type">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "igs io value type t" callback = "1" /> <!-- callback hack to avoid argument being a pointer -->
    </method>

    <method name = "attribute type">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "igs io value type t" callback = "1" /> <!-- callback hack to avoid argument being a pointer -->
    </method>

    <method name = "input count">
        DOC_STRING
        <return type = "size" />
    </method>

    <method name = "output count">
        DOC_STRING
        <return type = "size" />
    </method>

    <method name = "attribute count">
        DOC_STRING
        <return type = "size" />
    </method>

    <method name = "input list">
        DOC_STRING
        <argument name = "nb of elements" type = "size" by_reference = "1" />
        <return type = "string" by_reference = "1" fresh = "1"/>
    </method>

    <method name = "output list">
        DOC_STRING
        <argument name = "nb of elements" type = "size" by_reference = "1" />
        <return type = "string" by_reference = "1" fresh = "1" />
    </method>

    <method name = "attribute list">
        DOC_STRING
        <argument name = "nb of elements" type = "size" by_reference = "1" />
        <return type = "string" by_reference = "1" fresh = "1" />
    </method>

    <method name = "input exists">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "boolean" />
    </method>

    <method name = "output exists">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "boolean" />
    </method>

    <method name = "attribute exists">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "boolean" />
    </method>

    <method name = "input bool">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "boolean" />
    </method>

    <method name = "input int">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "integer" />
    </method>

    <method name = "input double">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "real"  size = "8" />
    </method>

    <method name = "input string">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "string" fresh = "1" />
    </method>

    <method name = "input data">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "data" type = "anything" by_reference = "1"/>
        <argument name = "size" type = "size" by_reference = "1" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "output bool">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "boolean" />
    </method>

    <method name = "output int">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "integer" />
    </method>

    <method name = "output double">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "real"  size = "8" />
    </method>

    <method name = "output string">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "string" fresh = "1" />
    </method>

    <method name = "output data">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "data" type = "anything" by_reference = "1"/>
        <argument name = "size" type = "size" by_reference = "1" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "attribute bool">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "boolean" />
    </method>

    <method name = "attribute int">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "integer" />
    </method>

    <method name = "attribute double">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "real"  size = "8" />
    </method>

    <method name = "attribute string">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "string" fresh = "1" />
    </method>

    <method name = "attribute data">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "data" type = "anything" by_reference = "1"/>
        <argument name = "size" type = "size" by_reference = "1" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "input set bool">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "boolean" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "input set int">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "integer" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "input set double">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "real"  size = "8" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "input set string">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "input set impulsion">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "input set data">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "anything" />
        <argument name = "size" type = "size" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "output set bool">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "boolean" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "output set int">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "integer" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "output set double">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "real"  size = "8" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "output set string">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "output set impulsion">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "output set data">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "anything" />
        <argument name = "size" type = "size" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "attribute set bool">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "boolean" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "attribute set int">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "integer" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "attribute set double">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "real"  size = "8" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "attribute set string">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "attribute set data">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "anything" />
        <argument name = "size" type = "size" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "constraints enforce">
        DOC_STRING
        <argument name = "enforce" type = "boolean" />
    </method>

    <method name = "input add constraint">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "constraint" type = "string" />
        <return type = "igs_result_t" callback = "1" /> <!-- callback hack to avoid the generation of a pointer type -->
    </method>

    <method name = "output add constraint">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "constraint" type = "string" />
        <return type = "igs_result_t" callback = "1" /> <!-- callback hack to avoid the generation of a pointer type -->
    </method>

    <method name = "attribute add constraint">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "constraint" type = "string" />
        <return type = "igs_result_t" callback = "1" /> <!-- callback hack to avoid the generation of a pointer type -->
    </method>

    <method name = "input set description">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "description" type = "string" />
    </method>

    <method name = "output set description">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "description" type = "string" />
    </method>

    <method name = "attribute set description">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "description" type = "string" />
    </method>

    <method name = "input zmsg">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "msg" type = "zmsg" by_reference = "1"/>
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "output set zmsg">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "value" type = "zmsg" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "clear input">
        DOC_STRING
        <argument name = "name" type = "string" />
    </method>

    <method name = "clear output">
        DOC_STRING
        <argument name = "name" type = "string" />
    </method>

    <method name = "clear attribute">
        DOC_STRING
        <argument name = "name" type = "string" />
    </method>

    <callback_type name = "io fn">
        DOC_STRING
        <argument name = "agent" type = "igsagent" />
        <argument name = "type" type = "igs io type t" callback = "1" />
        <argument name = "name" type = "string" />
        <argument name = "value type" type = "igs io value type t" callback = "1" />
        <argument name = "value" type = "anything" />
        <argument name = "value size" type = "size" />
        <argument name = "data" type = "anything" />
    </callback_type>

    <method name = "observe input">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "cb" type = "igsagent io fn" callback = "1" />
        <argument name = "data" type = "anything" />
    </method>

    <method name = "observe output">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "cb" type = "igsagent io fn" callback = "1" />
        <argument name = "data" type = "anything" />
    </method>

    <method name = "observe attribute">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "cb" type = "igsagent io fn" callback = "1" />
        <argument name = "data" type = "anything" />
    </method>

    <method name = "output mute">
        DOC_STRING
        <argument name = "name" type = "string" />
    </method>

    <method name = "output unmute">
        DOC_STRING
        <argument name = "name" type = "string" />
    </method>

    <method name = "output is muted">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "boolean" />
    </method>

    <method name = "mappings load str">
        DOC_STRING
        <argument name = "json_str" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "mappings load file">
        DOC_STRING
        <argument name = "file_path" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "mappings json">
        DOC_STRING
        <return type = "string" fresh = "1" />
    </method>

    <method name = "mapping count">
        DOC_STRING
        <return type = "size" />
    </method>

    <method name = "clear mappings">
        DOC_STRING
    </method>

    <method name = "clear mappings with agent">
        DOC_STRING
        <argument name = "agent_name" type = "string" />
    </method>

    <method name = "mapping add">
        DOC_STRING
        <argument name = "from_our_input" type = "string" />
        <argument name = "to_agent" type = "string" />
        <argument name = "with_output" type = "string" />
        <return type = "number" size = "8" />
    </method>

    <method name = "mapping remove with id">
        DOC_STRING
        <argument name = "id" type = "number" size = "8" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "mapping remove with name">
        DOC_STRING
        <argument name = "from_our_input" type = "string" />
        <argument name = "to_agent" type = "string" />
        <argument name = "with_output" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "split count">
        DOC_STRING
        <return type = "size" />
    </method>

    <method name = "split add">
        DOC_STRING
        <argument name = "from_our_input" type = "string" />
        <argument name = "to_agent" type = "string" />
        <argument name = "with_output" type = "string" />
        <return type = "number" size = "8" />
    </method>

    <method name = "split remove with id">
        DOC_STRING
        <argument name = "id" type = "number" size = "8" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "split remove with name">
        DOC_STRING
        <argument name = "from_our_input" type = "string" />
        <argument name = "to_agent" type = "string" />
        <argument name = "with_output" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "mappings outputs request">
        DOC_STRING
        <return type = "boolean" />
    </method>

    <method name = "mappings set outputs request">
        DOC_STRING
        <argument name = "notify" type = "boolean" />
    </method>

    <method name = "service call">
        DOC_STRING
        <argument name = "agent name or uuid" type = "string" />
        <argument name = "service name" type = "string" />
        <argument name = "list" type = "igs_service_arg" by_reference = "1"/>
        <argument name = "token" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <callback_type name = "service fn">
        DOC_STRING
        <argument name = "agent" type = "igsagent" />
        <argument name = "sender agent name" type = "string" />
        <argument name = "sender agent uuid" type = "string" />
        <argument name = "service name" type = "string" />
        <argument name = "first argument" type = "igs_service_arg" callback = "1" by_reference = "1" />
        <argument name = "args nbr" type = "size" />
        <argument name = "token"  type = "string" />
        <argument name = "data" type = "anything" />
    </callback_type>

    <method name = "service init">
        DOC_STRING
        <argument name = "name" type = "string" />
        <argument name = "cb" type = "igsagent service fn" callback = "1" />
        <argument name = "data" type = "anything" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "service remove">
        DOC_STRING
        <argument name = "name" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "service arg add">
        DOC_STRING
        <argument name = "service name" type = "string" />
        <argument name = "arg name" type = "string" />
        <argument name = "value type" type = "igs io value type t" callback = "1" /> <!-- callback hack to avoid argument being a pointer -->
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "service arg remove">
        DOC_STRING
        <argument name = "service name" type = "string" />
        <argument name = "arg name" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "service count">
        DOC_STRING
        <return type = "size" />
    </method>

    <method name = "service exists">
        DOC_STRING
        <argument name = "service name" type = "string" />
        <return type = "boolean" />
    </method>

    <method name = "services list">
        DOC_STRING
        <argument name = "nb of elements" type = "size" by_reference = "1" />
        <return type = "string" by_reference = "1" fresh = "1" />
    </method>

    <method name = "service args first">
        DOC_STRING
        <argument name = "service name" type = "string" />
        <return type = "igs_service_arg" callback = "1" by_reference = "1" />
    </method>

    <method name = "service args count">
        DOC_STRING
        <argument name = "service name" type = "string" />
        <return type = "size" />
    </method>

    <method name = "service arg exists">
        DOC_STRING
        <argument name = "service name" type = "string" />
        <argument name = "arg name" type = "string" />
        <return type = "boolean" />
    </method>

    <method name = "election join">
        DOC_STRING
        <argument name = "election_name" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "election leave">
        DOC_STRING
        <argument name = "election_name" type = "string" />
        <return type = "igs result t" callback = "1" />
    </method>

    <method name = "definition set path">
        DOC_STRING
        <argument name = "path" type = "string" />
    </method>

    <method name = "definition save">
        DOC_STRING
    </method>

    <method name = "mappings set path">
        DOC_STRING
        <argument name = "path" type = "string" />
    </method>

    <method name = "mappings save">
        DOC_STRING
    </method>

</class>
